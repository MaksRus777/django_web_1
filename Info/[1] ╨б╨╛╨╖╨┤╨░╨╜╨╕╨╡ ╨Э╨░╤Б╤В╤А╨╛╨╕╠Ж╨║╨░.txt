--- СОЗДАНИЕ DJANGO ПРОЕКТА ---

Структура: Проект PyCharm(Проект Django(Приложение Django))
Проект - это нечто, что включает в себя [набор приложений] из которых
         получается конечный сайт.
Приложение - это некая сущность, которая выполняет какие-то конкретные
             действия (Пример: Админка, Аутентификация, Сессии)

Шаг 01. Установка Django

    pip install django

Шаг 02. Показать версию Django (показатель правильной установки)

    django-admin version

Шаг 03. Создание проекта Django

    django-admin startproject <ИмяПапки/dj_prg>

Шаг 04. Войти/Выйти из директории (в терминале)

    cd dj_prg
    cd ..

Шаг 05. Создать приложение в Django.

    python manage.py startapp <ИмяПапки/dj_app>

Шаг 06. Регистрация приложение в проекте (чтобы оно было видно проекту Django, ВСТАВЛЯТЬ ВВЕРХ)

    Файл "settings.py" > INSTALLED_APPS > 'dj_app'

Шаг 07. Запуск тестового локального сервера Django:

    python manage.py runserver

    По адресу "http://127.0.0.1:8000/" должна появится стартовая страница об успешной установке Django.

Шаг 08. Остановка тестового локального сервера Django:

    CTRL + C

Шаг 09. Сделать папку Django проекта главной в PyCharm.

    Найти папку dj_prg > Правая кнопка мышки > Mark Directory as > Sources Root > Синим цветом

Шаг 10. Настройка удобного запуска (через правую верхнюю часть)

    1. Run manage.py
    2. Зайти в Edit Configuration
    3. Name: "Start Server Django"
    4. Script Path: "..manage.py" (обычно указано по умолчанию)
    5. Parameters: "runserver" (явно добавляем)

Шаг 11. Начальные настройки в settings.py (Сделать как ниже)

    LANGUAGE_CODE = "ru-ru"
    TIME_ZONE = "Europe/Minsk"
    USE_I18N = True  # Система перевода Django (повышение производительности приложения)
    USE_L10N = True  # локализованное форматирование данных (числа и даты в формате текущей локализации)
    USE_TZ = True  # Привязка datetime к часовому поясу который в TIME_ZONE

Шаг 12. Проверка запуска Start Server Django

    Если все правильно, должен открыться сайт с ракетой на русском языке.

Шаг 13. Шаблоны и Статичные файлы в settings.py (Предварительная настройка)

    1. Добавить import os
    2. Создание папки "templates" (должна находиться в папке Django проекта)
    3. Создание папки "static" (должна находиться в папке Django проекта)
    4. Добавить строчку TEMPLATES_DIR = os.path.join(BASE_DIR, "templates") (перед переменной TEMPLATES)
    5. Добавить в "TEMPLATES" > DIRS > TEMPLATES_DIR ('DIRS': [TEMPLATES_DIR, ],)
    6. Добавить строчку STATICFILES_DIRS = [os.path.join(BASE_DIR, "static")] в самый низ файла.

    [Папка static] Интернет адрес: www.site.com/static/1.jpg
    [Папка static] Локальный адрес: C:\Users\st\PycharmProjects\django_web_1\dj_prg\static\1.jpg

Шаг 14. Самим создать forms.py

    Создать пустой "forms.py" в папке приложения Django (dj_app)

Шаг 15. Создание супер-пользователя (Для входа в админ-панель)

    Файл db.sqlite3 - содержит Базу Данных
    Файл db.sqlite3 - изначально пустой
    db.sqlite3 - Должна содержать таблицы (модели) (Пример: Пользователи, Книги, Авторы)
    В db.sqlite3 будут таблицы, которые [создали мы] + [создал автоматически Django]

    1. Чтобы создать системные таблицы, вводим: python manage.py migrate
       После создания системных таблиц, появилась таблица "Users" в которой можно теперь создать пользователя.
    2. Создание первого и главного администратора: python manage.py createsuperuser
    3. admin : почту пропустить : 12345
    4. Надпись, что все получилось (Superuser created successfully)

Шаг 16. Проверка запуска Админ-панели

    Зайти по адресу: http://127.0.0.1:8000/admin и попробовать войти в админ-панель.


